// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RusunawaApp.Data;

#nullable disable

namespace RUSUNAWAAA.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250612224603_pembaruantabel4")]
    partial class pembaruantabel4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RUSUNAWAAA.Models.Kontak", b =>
                {
                    b.Property<int>("Id_Kontak")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Kontak"));

                    b.Property<string>("Lokasi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NamaKontak")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telepon")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_Kontak");

                    b.ToTable("Kontaks");
                });

            modelBuilder.Entity("RUSUNAWAAA.Models.Laporan", b =>
                {
                    b.Property<int>("Id_Laporan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Laporan"));

                    b.Property<string>("Isi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Judul")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomorKTP")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PathGambar")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Tanggal")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id_Laporan");

                    b.HasIndex("NomorKTP");

                    b.ToTable("Laporans");
                });

            modelBuilder.Entity("RUSUNAWAAA.Models.MediaVirtual", b =>
                {
                    b.Property<int>("Id_Media")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Media"));

                    b.Property<string>("Keterangan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NamaFile")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PathMedia")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_Media");

                    b.ToTable("MediaVirtuals");
                });

            modelBuilder.Entity("RUSUNAWAAA.Models.Notifikasi", b =>
                {
                    b.Property<int>("Id_Notifikasi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Notifikasi"));

                    b.Property<string>("Isi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Judul")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomorKTP")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("SudahDibaca")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Tanggal")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id_Notifikasi");

                    b.HasIndex("NomorKTP");

                    b.ToTable("Notifikasis");
                });

            modelBuilder.Entity("RUSUNAWAAA.Models.Pembayaran", b =>
                {
                    b.Property<int>("Id_Pembayaran")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Pembayaran"));

                    b.Property<decimal>("Nominal")
                        .HasColumnType("numeric");

                    b.Property<string>("NomorKTP")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Tanggal")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id_Pembayaran");

                    b.HasIndex("NomorKTP");

                    b.ToTable("Pembayarans");
                });

            modelBuilder.Entity("RUSUNAWAAA.Models.Pengajuan", b =>
                {
                    b.Property<int>("Id_Pengajuan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Pengajuan"));

                    b.Property<string>("AlamatAsal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AsalKota")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DurasiSewa")
                        .HasColumnType("integer");

                    b.Property<decimal>("EstimasiBiaya")
                        .HasColumnType("numeric");

                    b.Property<string>("Fakultas")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Id_Unit")
                        .HasColumnType("integer");

                    b.Property<string>("JenisKelamin")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NIM")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NamaLengkap")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NamaOrangTua")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomorHP")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomorKTP")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PathKTP")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PathPasfoto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PathPembayaran")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PathSuratPernyataan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Prodi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("TanggalPengajuan")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id_Pengajuan");

                    b.ToTable("Pengajuans");
                });

            modelBuilder.Entity("RUSUNAWAAA.Models.PerpanjanganSewa", b =>
                {
                    b.Property<int>("Id_Perpanjangan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Perpanjangan"));

                    b.Property<int>("LamaBulan")
                        .HasColumnType("integer");

                    b.Property<decimal>("Nominal")
                        .HasColumnType("numeric");

                    b.Property<string>("NomorKTP")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PathBuktiPembayaran")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("TanggalPengajuan")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id_Perpanjangan");

                    b.HasIndex("NomorKTP");

                    b.ToTable("Perpanjangans");
                });

            modelBuilder.Entity("RUSUNAWAAA.Models.TataTertib", b =>
                {
                    b.Property<int>("Id_Tatatertib")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Tatatertib"));

                    b.Property<string>("Judul")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("TanggalUpdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TargetJenisKelamin")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_Tatatertib");

                    b.ToTable("TataTertibs");
                });

            modelBuilder.Entity("RUSUNAWAAA.Models.Ulasan", b =>
                {
                    b.Property<int>("Id_Ulasan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Ulasan"));

                    b.Property<string>("Komentar")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomorKTP")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PathGambar")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Rating")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Tanggal")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id_Ulasan");

                    b.HasIndex("NomorKTP");

                    b.ToTable("Ulasans");
                });

            modelBuilder.Entity("RUSUNAWAAA.Models.Unit", b =>
                {
                    b.Property<int>("Id_Unit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id_Unit"));

                    b.Property<decimal>("HargaSewa")
                        .HasColumnType("numeric");

                    b.Property<int>("Lantai")
                        .HasColumnType("integer");

                    b.Property<float>("Luas")
                        .HasColumnType("real");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id_Unit");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("RUSUNAWAAA.Models.User", b =>
                {
                    b.Property<string>("NomorKTP")
                        .HasColumnType("text");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)");

                    b.Property<string>("NamaLengkap")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("NomorKTP");

                    b.ToTable("Users");

                    b.HasDiscriminator().HasValue("User");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("RUSUNAWAAA.Models.Admin", b =>
                {
                    b.HasBaseType("RUSUNAWAAA.Models.User");

                    b.HasDiscriminator().HasValue("Admin");
                });

            modelBuilder.Entity("RUSUNAWAAA.Models.Penyewa", b =>
                {
                    b.HasBaseType("RUSUNAWAAA.Models.User");

                    b.Property<string>("AlamatAsal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AsalKota")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Fakultas")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("JenisKelamin")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NIM")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NamaOrangTua")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomorHP")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Prodi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("TanggalLahir")
                        .HasColumnType("timestamp with time zone");

                    b.HasDiscriminator().HasValue("Penyewa");
                });

            modelBuilder.Entity("RUSUNAWAAA.Models.Laporan", b =>
                {
                    b.HasOne("RUSUNAWAAA.Models.User", "User")
                        .WithMany("Laporans")
                        .HasForeignKey("NomorKTP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("RUSUNAWAAA.Models.Notifikasi", b =>
                {
                    b.HasOne("RUSUNAWAAA.Models.User", "User")
                        .WithMany("Notifikasis")
                        .HasForeignKey("NomorKTP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("RUSUNAWAAA.Models.Pembayaran", b =>
                {
                    b.HasOne("RUSUNAWAAA.Models.User", "User")
                        .WithMany("Pembayarans")
                        .HasForeignKey("NomorKTP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("RUSUNAWAAA.Models.PerpanjanganSewa", b =>
                {
                    b.HasOne("RUSUNAWAAA.Models.User", "User")
                        .WithMany("Perpanjangans")
                        .HasForeignKey("NomorKTP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("RUSUNAWAAA.Models.Ulasan", b =>
                {
                    b.HasOne("RUSUNAWAAA.Models.User", "User")
                        .WithMany("Ulasans")
                        .HasForeignKey("NomorKTP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("RUSUNAWAAA.Models.User", b =>
                {
                    b.Navigation("Laporans");

                    b.Navigation("Notifikasis");

                    b.Navigation("Pembayarans");

                    b.Navigation("Perpanjangans");

                    b.Navigation("Ulasans");
                });
#pragma warning restore 612, 618
        }
    }
}
